{"version":3,"sources":["../src/utils.ts","../src/math.ts","../src/fps.ts","../src/timer.ts","../src/kaboom.ts","main.js","../../../home/gitpod/.nvm/versions/node/v16.13.0/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["kaboom","loadSprite","add","sprite","pos","area","addLevel","width","height","solid","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAA,CAAA,GAAA,cAAwB,GAAe;EAE7C,WAAA,CAAA,GAAe,CAAA,EAAM;IACpB,KAAA,CAAM,GAAG,CAAA,CAAA;IAFV,CAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAGC,IAAA,CAAK,OAAA,GAAU,CAAA;EAAA;EAEhB,IAAA,CAAK,CAAA,EAAc;IAClB,IAAM,CAAA,GAAK,IAAA,CAAK,OAAA;IAChB,OAAA,IAAA,CAAK,GAAA,CAAI,CAAA,EAAI,CAAA,CAAA,EACb,IAAA,CAAK,OAAA,EAAA,EACE,CAAA;EAAA;EAER,KAAA,CAAM,CAAA,EAAkB;IACvB,IAAM,CAAA,GAAK,IAAA,CAAK,IAAA,CAAK,CAAA,CAAA;IACrB,OAAO,MAAM,IAAA,CAAK,MAAA,CAAO,CAAA,CAAA;EAAA;AAAA,CAAA;AAdpB,CAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AAkBA,SAAA,EAAA,CAAgB,CAAA,EAAS,CAAA,EAAkB;EACjD,IAAM,CAAA,GAAK,OAAO,CAAA;IACZ,CAAA,GAAK,OAAO,CAAA;EAClB,IAAI,CAAA,KAAO,CAAA,EACV,OAAO,CAAA,CAAA;EAER,IAAI,CAAA,KAAO,QAAA,IAAY,CAAA,KAAO,QAAA,EAAU;IACvC,IAAM,CAAA,GAAK,MAAA,CAAO,IAAA,CAAK,CAAA,CAAA;MACjB,CAAA,GAAK,MAAA,CAAO,IAAA,CAAK,CAAA,CAAA;IACvB,IAAI,CAAA,CAAG,MAAA,KAAW,CAAA,CAAG,MAAA,EACpB,OAAO,CAAA,CAAA;IAER,KAAA,IAAW,CAAA,IAAK,CAAA,EAAI;MACnB,IAAM,CAAA,GAAK,CAAA,CAAG,CAAA,CAAA;QACR,CAAA,GAAK,CAAA,CAAG,CAAA,CAAA;MACd,IAAI,EAAE,OAAO,CAAA,IAAO,UAAA,IAAc,OAAO,CAAA,IAAO,UAAA,CAAA,IAC3C,CAAC,EAAA,CAAO,CAAA,EAAI,CAAA,CAAA,EACf,OAAO,CAAA,CAAA;IAAA;IAIV,OAAO,CAAA,CAAA;EAAA;EAER,OAAO,CAAA,KAAO,CAAA;AAAA;AAvBC,CAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AA0BT,SAAA,EAAA,CAAqB,CAAA,EAAa,CAAA,EAAkB;EAC1D,IAAM,CAAA,GAAI,QAAA,CAAS,aAAA,CAAc,GAAA,CAAA;EACjC,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,CAAA,CAAA,EAC1B,CAAA,CAAE,YAAA,CAAa,OAAA,EAAS,eAAA,CAAA,EACxB,CAAA,CAAE,IAAA,GAAO,CAAA,EACT,CAAA,CAAE,QAAA,GAAW,CAAA,EACb,CAAA,CAAE,KAAA,EAAA,EACF,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,CAAA,CAAA;AAAA;AAPX,CAAA,CAAA,EAAA,EAAA,aAAA,CAAA;AAUT,SAAA,EAAA,CAAsB,CAAA,EAAY,CAAA,EAAkB;EAC1D,IAAM,CAAA,GAAM,GAAA,CAAI,eAAA,CAAgB,CAAA,CAAA;EAChC,EAAA,CAAY,CAAA,EAAK,CAAA,CAAA,EACjB,GAAA,CAAI,eAAA,CAAgB,CAAA,CAAA;AAAA;AAHL,CAAA,CAAA,EAAA,EAAA,cAAA,CAAA;AAMT,SAAA,EAAA,CAAmB,CAAA,EAAa;EACtC,OAAO,CAAA,CAAI,KAAA,CAAM,0BAAA,CAAA;AAAA;AADF,CAAA,CAAA,EAAA,EAAA,WAAA,CAAA;AAIT,IAAM,EAAA,GAAO,CAAA,MAAM;IACzB,IAAI,CAAA,GAAK,CAAA;IACT,OAAO,MAAM,CAAA,EAAA;EAAA,CAAA,GAAA;EAGR,EAAA,GAAS,IAAI,GAAA;AAEZ,SAAA,CAAA,CAAsB,CAAA,EAAiB,CAAA,EAAiB;EAC9D,EAAA,CAAY,GAAA,CAAI,CAAA,CAAA,KACf,EAAA,CAAO,GAAA,CAAI,CAAA,CAAA,EACX,OAAA,CAAQ,IAAA,CAAK,GAAG,CAAA,uBAA8B,CAAA,WAAA,CAAA,CAAA;AAAA;AAHhC,CAAA,CAAA,CAAA,EAAA,cAAA,CAAA;AAOT,IAAM,CAAA,GAAY,CAAA,CAAA,CAAC,CAAA,EAAiB,CAAA,EAAiB,CAAA,KAA8B,CAAA,GAAI,CAAA,MAC7F,CAAA,CAAa,CAAA,EAAS,CAAA,CAAA,EACf,CAAA,CAAQ,GAAG,CAAA,CAAA,CAAA,EAFM,WAAA,CAAA;ACnElB,SAAA,EAAA,CAAiB,CAAA,EAAqB;EAC5C,OAAO,CAAA,GAAM,IAAA,CAAK,EAAA,GAAK,GAAA;AAAA;AADR,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA;AAIT,SAAA,EAAA,CAAiB,CAAA,EAAqB;EAC5C,OAAO,CAAA,GAAM,GAAA,GAAM,IAAA,CAAK,EAAA;AAAA;AADT,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA;AAIT,SAAA,CAAA,CACN,CAAA,EACA,CAAA,EACA,CAAA,EACS;EACT,OAAI,CAAA,GAAM,CAAA,GACF,CAAA,CAAM,CAAA,EAAK,CAAA,EAAK,CAAA,CAAA,GAEjB,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK,GAAA,CAAI,CAAA,EAAK,CAAA,CAAA,EAAM,CAAA,CAAA;AAAA;AARrB,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AAWT,SAAA,EAAA,CACN,CAAA,EACA,CAAA,EACA,CAAA,EACS;EACT,OAAO,CAAA,GAAK,CAAA,CAAA,GAAI,CAAA,IAAK,CAAA;AAAA;AALN,CAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AAQT,SAAA,EAAA,CACN,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACS;EACT,OAAO,CAAA,GAAM,CAAA,CAAA,GAAI,CAAA,KAAO,CAAA,GAAK,CAAA,CAAA,IAAO,CAAA,GAAK,CAAA,CAAA;AAAA;AAP1B,CAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AAUT,SAAA,EAAA,CACN,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACS;EACT,OAAO,CAAA,CAAM,EAAA,CAAI,CAAA,EAAG,CAAA,EAAI,CAAA,EAAI,CAAA,EAAI,CAAA,CAAA,EAAK,CAAA,EAAI,CAAA,CAAA;AAAA;AAP1B,CAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AAUT,IAAA,CAAA,GAAA,MAAW;IAGjB,WAAA,CAAY,CAAA,GAAY,CAAA,EAAG,CAAA,GAAY,CAAA,EAAG;MAF1C,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MAEX,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA;IAAA;IAAA,OAEH,SAAA,CAAU,CAAA,EAAa;MAC7B,IAAM,CAAA,GAAQ,EAAA,CAAQ,CAAA,CAAA;MACtB,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAQ,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,CAAA;IAAA;IAM3C,KAAA,GAAc;MACb,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,CAAA;IAAA;IAE9B,GAAA,CAAA,GAAO,CAAA,EAAY;MAClB,IAAM,CAAA,GAAK,CAAA,CAAK,GAAG,CAAA,CAAA;MACnB,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,CAAA;IAAA;IAE5C,GAAA,CAAA,GAAO,CAAA,EAAY;MAClB,IAAM,CAAA,GAAK,CAAA,CAAK,GAAG,CAAA,CAAA;MACnB,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,CAAA;IAAA;IAE5C,KAAA,CAAA,GAAS,CAAA,EAAY;MACpB,IAAM,CAAA,GAAI,CAAA,CAAK,GAAG,CAAA,CAAA;MAClB,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAE,CAAA,CAAA;IAAA;IAE1C,IAAA,CAAA,GAAQ,CAAA,EAAc;MACrB,IAAM,CAAA,GAAK,CAAA,CAAK,GAAG,CAAA,CAAA;MACnB,OAAO,IAAA,CAAK,IAAA,CACV,CAAA,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,CAAA,GAC5B,CAAA,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,CAAA,CAAA;IAAA;IAGnC,GAAA,GAAc;MACb,OAAO,IAAA,CAAK,IAAA,CAAK,IAAI,CAAA,CAAK,CAAA,EAAG,CAAA,CAAA,CAAA;IAAA;IAE9B,IAAA,GAAa;MACZ,OAAO,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,IAAA,CAAK,GAAA,EAAA,CAAA;IAAA;IAE5B,MAAA,GAAe;MACd,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAC,IAAA,CAAK,CAAA,CAAA;IAAA;IAE/B,GAAA,CAAI,CAAA,EAAkB;MACrB,OAAO,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;IAAA;IAEpC,KAAA,CAAA,GAAS,CAAA,EAAc;MACtB,IAAM,CAAA,GAAK,CAAA,CAAK,GAAG,CAAA,CAAA;MACnB,OAAO,EAAA,CAAQ,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,CAAA,CAAA;IAAA;IAEtD,IAAA,CAAK,CAAA,EAAU,CAAA,EAAiB;MAC/B,OAAO,IAAI,CAAA,CAAK,EAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,CAAA,EAAI,EAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,CAAA,CAAA;IAAA;IAE3D,OAAA,CAAQ,CAAA,EAAiB;MACxB,OAAO,IAAI,CAAA,CAAK,MAAA,CAAO,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,CAAA,CAAA,EAAK,MAAA,CAAO,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,CAAA,CAAA,CAAA;IAAA;IAElE,EAAA,CAAG,CAAA,EAAsB;MACxB,OAAO,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IAAK,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;IAAA;IAE/C,QAAA,GAAmB;MAClB,OAAO,IAAI,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,CAAA,KAAO,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,CAAA,GAAA;IAAA;IAEjD,GAAA,GAAc;MACb,OAAO,IAAA,CAAK,QAAA,EAAA;IAAA;EAAA,CAAA;EAlEP,CAAA,GAAA,CAAA;AAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAWC,CAAA,CAXD,CAAA,EAWC,MAAA,EAAO,IAAI,CAAA,CAAK,CAAA,CAAA,EAAI,CAAA,CAAA,CAAA,EACpB,CAAA,CAZD,CAAA,EAYC,OAAA,EAAQ,IAAI,CAAA,CAAK,CAAA,EAAG,CAAA,CAAA,CAAA,EACpB,CAAA,CAbD,CAAA,EAaC,IAAA,EAAK,IAAI,CAAA,CAAK,CAAA,EAAG,CAAA,CAAA,CAAA,CAAA,EACjB,CAAA,CAdD,CAAA,EAcC,MAAA,EAAO,IAAI,CAAA,CAAK,CAAA,EAAG,CAAA,CAAA,CAAA;AAwDpB,SAAA,CAAA,CAAA,GAAiB,CAAA,EAAY;EACnC,IAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG;IACtB,IAAI,CAAA,CAAK,CAAA,CAAA,YAAc,CAAA,EACtB,OAAO,CAAA,CAAK,CAAA,CAAK,CAAA,CAAA,CAAG,CAAA,EAAG,CAAA,CAAK,CAAA,CAAA,CAAG,CAAA,CAAA;IACzB,IAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,CAAK,CAAA,CAAA,CAAA,IAAO,CAAA,CAAK,CAAA,CAAA,CAAG,MAAA,KAAW,CAAA,EACvD,OAAO,CAAA,CAAK,KAAA,CAAM,IAAA,EAAM,CAAA,CAAK,CAAA,CAAA,CAAA;EAAA;EAG/B,OAAO,IAAI,CAAA,CAAK,GAAG,CAAA,CAAA;AAAA;AARJ,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAWT,IAAA,EAAA,GAAA,MAAW;EAIjB,WAAA,CAAY,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW;IAH7C,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;IACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;IACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;IAEX,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA;EAAA;EAEV,EAAA,GAAK;IACJ,OAAO,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,CAAA;EAAA;AAAA,CAAA;AAVpB,CAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AAcA,IAAM,EAAA,GAAO,CAAA,CAAA,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,KAAM,IAAI,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,EAA5B,MAAA,CAAA;EAEb,EAAA,GAAA,MAAY;IAMlB,WAAA,CAAY,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW;MAJ7C,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,GAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,GAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,GAAA,CAAA;MAGX,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EAAG,CAAA,EAAG,GAAA,CAAA,EACrB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EAAG,CAAA,EAAG,GAAA,CAAA,EACrB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EAAG,CAAA,EAAG,GAAA,CAAA;IAAA;IAAA,OAGf,SAAA,CAAU,CAAA,EAAe;MAC/B,OAAO,IAAI,EAAA,CAAM,CAAA,CAAI,CAAA,CAAA,EAAI,CAAA,CAAI,CAAA,CAAA,EAAI,CAAA,CAAI,CAAA,CAAA,CAAA;IAAA;IAYtC,KAAA,GAAe;MACd,OAAO,IAAI,EAAA,CAAM,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,CAAA;IAAA;IAGvC,OAAA,CAAQ,CAAA,EAAkB;MACzB,OAAO,IAAI,EAAA,CAAM,IAAA,CAAK,CAAA,GAAI,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAA;IAAA;IAGnD,MAAA,CAAO,CAAA,EAAkB;MACxB,OAAO,IAAA,CAAK,OAAA,CAAQ,CAAC,CAAA,CAAA;IAAA;IAGtB,MAAA,GAAgB;MACf,OAAO,IAAI,EAAA,CAAM,GAAA,GAAM,IAAA,CAAK,CAAA,EAAG,GAAA,GAAM,IAAA,CAAK,CAAA,EAAG,GAAA,GAAM,IAAA,CAAK,CAAA,CAAA;IAAA;IAGzD,IAAA,CAAK,CAAA,EAAqB;MACzB,OAAO,IAAI,EAAA,CACV,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA,EACnB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA,EACnB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA,CAAA;IAAA;IAIrB,EAAA,CAAG,CAAA,EAAuB;MACzB,OAAO,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACpB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;IAAA;IAItB,GAAA,GAAc;MACb,OAAA,CAAA,CAAa,OAAA,EAAS,YAAA,CAAA,EACf,IAAI,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,GAAA;IAAA;IAGvC,QAAA,GAAmB;MAClB,OAAO,IAAI,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,GAAA;IAAA;IAAA,OAGhC,OAAA,CAAQ,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW;MAE/C,IAAI,CAAA,IAAK,CAAA,EACR,OAAO,CAAA,CAAI,GAAA,GAAM,CAAA,EAAG,GAAA,GAAM,CAAA,EAAG,GAAA,GAAM,CAAA,CAAA;MAGpC,IAAM,CAAA,GAAU,CAAA,CAAA,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,MAClB,CAAA,GAAI,CAAA,KAAG,CAAA,IAAK,CAAA,CAAA,EACZ,CAAA,GAAI,CAAA,KAAG,CAAA,IAAK,CAAA,CAAA,EACZ,CAAA,GAAI,CAAA,GAAI,CAAA,GAAU,CAAA,GAAK,CAAA,CAAA,GAAI,CAAA,IAAK,CAAA,GAAI,CAAA,GACpC,CAAA,GAAI,CAAA,GAAI,CAAA,GAAU,CAAA,GAClB,CAAA,GAAI,CAAA,GAAI,CAAA,GAAU,CAAA,GAAK,CAAA,CAAA,GAAI,CAAA,KAAM,CAAA,GAAE,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,GACzC,CAAA,CAAA,EANQ,SAAA,CAAA;QASV,CAAA,GAAI,CAAA,GAAI,EAAA,GAAM,CAAA,IAAK,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA;QACxC,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA;QACZ,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA;QAC1B,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA;QAClB,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA;MAEhC,OAAO,IAAI,EAAA,CAAM,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA,CAAA,EAAM,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA,CAAA,EAAM,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAtFrE,CAAA,GAAA,EAAA;AAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAgBC,CAAA,CAhBD,CAAA,EAgBC,KAAA,EAAM,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,CAAA,CAAA,CAAA,EAClB,CAAA,CAjBD,CAAA,EAiBC,OAAA,EAAQ,CAAA,CAAI,CAAA,EAAG,GAAA,EAAK,CAAA,CAAA,CAAA,EACpB,CAAA,CAlBD,CAAA,EAkBC,MAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,GAAA,CAAA,CAAA,EACjB,CAAA,CAnBD,CAAA,EAmBC,QAAA,EAAS,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,CAAA,CAAA,CAAA,EACvB,CAAA,CApBD,CAAA,EAoBC,SAAA,EAAU,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,GAAA,CAAA,CAAA,EACtB,CAAA,CArBD,CAAA,EAqBC,MAAA,EAAO,CAAA,CAAI,CAAA,EAAG,GAAA,EAAK,GAAA,CAAA,CAAA,EACnB,CAAA,CAtBD,CAAA,EAsBC,OAAA,EAAQ,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EACtB,CAAA,CAvBD,CAAA,EAuBC,OAAA,EAAQ,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;AAqEnB,SAAA,CAAA,CAAA,GAAgB,CAAA,EAAa;EACnC,IAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EACnB,OAAO,IAAI,CAAA,CAAM,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA;EACrB,IAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG;IAC7B,IAAI,CAAA,CAAK,CAAA,CAAA,YAAc,CAAA,EACtB,OAAO,CAAA,CAAK,CAAA,CAAA,CAAG,KAAA,EAAA;IACT,IAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,CAAK,CAAA,CAAA,CAAA,IAAO,CAAA,CAAK,CAAA,CAAA,CAAG,MAAA,KAAW,CAAA,EACvD,OAAO,CAAA,CAAM,SAAA,CAAU,CAAA,CAAK,CAAA,CAAA,CAAA;EAAA;EAI9B,OAAO,IAAI,CAAA,CAAM,GAAG,CAAA,CAAA;AAAA;AAXL,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA;AAcT,IAAM,EAAA,GAAU,CAAA,CAAA,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,KAAM,CAAA,CAAM,OAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,EAAjC,SAAA,CAAA;EAEhB,CAAA,GAAA,MAAW;IAKjB,WAAA,CAAY,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW;MAJxD,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MACZ,CAAA,CAAA,IAAA,EAAA,GAAA,EAAY,CAAA,CAAA;MAEX,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA,EACT,IAAA,CAAK,CAAA,GAAI,CAAA;IAAA;IAEV,KAAA,CAAM,CAAA,EAAmB;MACxB,OAAO,IAAI,CAAA,CACV,IAAA,CAAK,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACxB,IAAA,CAAK,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACxB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACf,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,CAAA;IAAA;IAGjB,KAAA,GAAc;MACb,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,CAAA;IAAA;IAE9C,EAAA,CAAG,CAAA,EAAsB;MACxB,OAAO,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACpB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;IAAA;IAEtB,QAAA,GAAmB;MAClB,OAAO,QAAQ,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,KAAM,IAAA,CAAK,CAAA,GAAA;IAAA;EAAA,CAAA;AA7BhD,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAiCA,SAAA,EAAA,CAAc,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW,CAAA,EAAiB;EACtE,OAAO,IAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA;AAAA;AADV,CAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AAIT,IAAA,CAAA,GAAA,MAAW;EASjB,WAAA,CAAY,CAAA,EAAc;IAP1B,CAAA,CAAA,IAAA,EAAA,GAAA,EAAc,CACb,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;IAIT,CAAA,KACC,IAAA,CAAK,CAAA,GAAI,CAAA,CAAA;EAAA;EAIX,KAAA,GAAc;IACb,OAAO,IAAI,CAAA,CAAK,IAAA,CAAK,CAAA,CAAA;EAAA;EAGtB,IAAA,CAAK,CAAA,EAAmB;IAEvB,IAAM,CAAA,GAAM,EAAA;IAEZ,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,EAAA,EACtB,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,EAAA,EACtB,CAAA,CAAI,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GACX,IAAA,CAAK,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GACpC,IAAA,CAAK,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GACpC,IAAA,CAAK,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GACpC,IAAA,CAAK,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA,GAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,CAAA;IAIvC,OAAO,IAAI,CAAA,CAAK,CAAA,CAAA;EAAA;EAIjB,QAAA,CAAS,CAAA,EAAe;IACvB,OAAO;MACN,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACtE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACtE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACvE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;IAAA,CAAA;EAAA;EAIzE,QAAA,CAAS,CAAA,EAAe;IACvB,IAAM,CAAA,GAAK,IAAA,CAAK,QAAA,CAAS;MACxB,CAAA,EAAG,CAAA,CAAE,CAAA;MACL,CAAA,EAAG,CAAA,CAAE,CAAA;MACL,CAAA,EAAG,CAAA,CAAE,CAAA;MACL,CAAA,EAAG;IAAA,CAAA,CAAA;IAEJ,OAAO,EAAA,CAAK,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA,CAAA;EAAA;EAG5B,QAAA,CAAS,CAAA,EAAe;IACvB,OAAO,CAAA,CACN,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,EAC/D,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,CAAA;EAAA;EAAA,OAI1D,SAAA,CAAU,CAAA,EAAe;IAC/B,OAAO,IAAI,CAAA,CAAK,CACf,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,CAAE,CAAA,EAAG,CAAA,CAAE,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;EAAA;EAAA,OAIR,KAAA,CAAM,CAAA,EAAe;IAC3B,OAAO,IAAI,CAAA,CAAK,CACf,CAAA,CAAE,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACX,CAAA,EAAG,CAAA,CAAE,CAAA,EAAG,CAAA,EAAG,CAAA,EACX,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;EAAA;EAAA,OAIJ,OAAA,CAAQ,CAAA,EAAiB;IAC/B,OAAA,CAAA,GAAI,EAAA,CAAQ,CAAC,CAAA,CAAA,EACN,IAAI,CAAA,CAAK,CACf,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAC,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAC9B,CAAA,EAAG,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAC7B,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;EAAA;EAAA,OAIJ,OAAA,CAAQ,CAAA,EAAiB;IAC/B,OAAA,CAAA,GAAI,EAAA,CAAQ,CAAC,CAAA,CAAA,EACN,IAAI,CAAA,CAAK,CACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAAG,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAC7B,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAC,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAAG,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAC9B,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;EAAA;EAAA,OAIJ,OAAA,CAAQ,CAAA,EAAiB;IAC/B,OAAA,CAAA,GAAI,EAAA,CAAQ,CAAC,CAAA,CAAA,EACN,IAAI,CAAA,CAAK,CACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAC,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAAG,CAAA,EAC9B,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,IAAA,CAAK,GAAA,CAAI,CAAA,CAAA,EAAI,CAAA,EAAG,CAAA,EAC7B,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAA;EAAA;EAIX,SAAA,CAAU,CAAA,EAAe;IACxB,OAAO,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,SAAA,CAAU,CAAA,CAAA,CAAA;EAAA;EAGjC,KAAA,CAAM,CAAA,EAAe;IACpB,OAAO,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,KAAA,CAAM,CAAA,CAAA,CAAA;EAAA;EAG7B,OAAA,CAAQ,CAAA,EAAiB;IACxB,OAAO,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,OAAA,CAAQ,CAAA,CAAA,CAAA;EAAA;EAG/B,OAAA,CAAQ,CAAA,EAAiB;IACxB,OAAO,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,OAAA,CAAQ,CAAA,CAAA,CAAA;EAAA;EAG/B,OAAA,CAAQ,CAAA,EAAiB;IACxB,OAAO,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,OAAA,CAAQ,CAAA,CAAA,CAAA;EAAA;EAG/B,MAAA,GAAe;IAEd,IAAM,CAAA,GAAM,EAAA;MAEN,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACpD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MAClD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,EAAA,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA;MAClD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,CAAA,GAAK,IAAA,CAAK,CAAA,C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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["export class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport function downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nexport function downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport function isDataURL(str: string) {\n\treturn str.match(/^data:\\w+\\/\\w+;base64,.+/);\n}\n\nexport const uid = (() => {\n\tlet id = 0;\n\treturn () => id++;\n})();\n\nconst warned = new Set();\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\tif (!warned.has(oldName)) {\n\t\twarned.add(oldName);\n\t\tconsole.warn(`${oldName} is deprecated. Use ${newName} instead.`);\n\t}\n}\n\nexport const deprecate = (oldName: string, newName: string, newFunc: (...args) => any) => (...args) => {\n\tdeprecateMsg(oldName, newName);\n\treturn newFunc(...args);\n};\n","import {\n\tVec4,\n\tPoint,\n\tPolygon,\n\tArea,\n} from \"./types\";\n\nimport {\n\tdeprecateMsg,\n} from \"./utils\";\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nexport function lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nexport class Vec2 {\n\tx: number = 0;\n\ty: number = 0;\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg);\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle));\n\t}\n\tstatic LEFT = new Vec2(-1, 0);\n\tstatic RIGHT = new Vec2(1, 0);\n\tstatic UP = new Vec2(0, -1);\n\tstatic DOWN = new Vec2(0, 1);\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y);\n\t}\n\tadd(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y);\n\t}\n\tsub(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y);\n\t}\n\tscale(...args): Vec2 {\n\t\tconst s = vec2(...args);\n\t\treturn new Vec2(this.x * s.x, this.y * s.y);\n\t}\n\tdist(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn Math.sqrt(\n\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t);\n\t}\n\tlen(): number {\n\t\treturn this.dist(new Vec2(0, 0));\n\t}\n\tunit(): Vec2 {\n\t\treturn this.scale(1 / this.len());\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x);\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y;\n\t}\n\tangle(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t}\n\tlerp(p2: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y;\n\t}\n\ttoString(): string {\n\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t}\n\tstr(): string {\n\t\treturn this.toString();\n\t}\n}\n\nexport function vec2(...args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\treturn new Vec2(...args);\n}\n\nexport class Vec3 {\n\tx: number = 0;\n\ty: number = 0;\n\tz: number = 0;\n\tconstructor(x: number, y: number, z: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\txy() {\n\t\treturn vec2(this.x, this.y);\n\t}\n}\n\nexport const vec3 = (x, y, z) => new Vec3(x, y, z);\n\nexport class Color {\n\n\tr: number = 255;\n\tg: number = 255;\n\tb: number = 255;\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255);\n\t\tthis.g = clamp(g, 0, 255);\n\t\tthis.b = clamp(b, 0, 255);\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic RED = rgb(255, 0, 0);\n\tstatic GREEN = rgb(0, 255, 0);\n\tstatic BLUE = rgb(0, 0, 255);\n\tstatic YELLOW = rgb(255, 255, 0);\n\tstatic MAGENTA = rgb(255, 0, 255);\n\tstatic CYAN = rgb(0, 255, 255);\n\tstatic WHITE = rgb(255, 255, 255);\n\tstatic BLACK = rgb(0, 0, 0);\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b);\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a);\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a);\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b);\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t);\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\t\t\t;\n\t}\n\n\tstr(): string {\n\t\tdeprecateMsg(\"str()\", \"toString()\");\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\ttoString(): string {\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tconst p = 2 * l - q;\n\t\tconst r = hue2rgb(p, q, h + 1 / 3);\n\t\tconst g = hue2rgb(p, q, h);\n\t\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone();\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0]);\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args);\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l);\n\nexport class Quad {\n\tx: number = 0;\n\ty: number = 0;\n\tw: number = 1;\n\th: number = 1;\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.w = w;\n\t\tthis.h = h;\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h\n\t\t);\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h);\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h;\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h);\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t];\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m;\n\t\t}\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4(this.m);\n\t};\n\n\tmult(other: Mat4): Mat4 {\n\n\t\tconst out = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\tmultVec4(p: Vec4): Vec4 {\n\t\treturn {\n\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t};\n\t}\n\n\tmultVec3(p: Vec3): Vec3 {\n\t\tconst p4 = this.multVec4({\n\t\t\tx: p.x,\n\t\t\ty: p.y,\n\t\t\tz: p.z,\n\t\t\tw: 1.0,\n\t\t});\n\t\treturn vec3(p4.x, p4.y, p4.z);\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t);\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\ttranslate(p: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.translate(p));\n\t}\n\n\tscale(s: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.scale(s));\n\t}\n\n\trotateX(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateX(a));\n\t}\n\n\trotateY(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateY(a));\n\t}\n\n\trotateZ(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateZ(a));\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = [];\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString();\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\nexport class RNG {\n\tseed: number;\n\tconstructor(seed: number) {\n\t\tthis.seed = seed;\n\t}\n\tgen(...args) {\n\t\tif (args.length === 0) {\n\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\treturn this.seed / M;\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn vec2(\n\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t);\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn rgb(\n\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function rng(seed: number): RNG {\n\tdeprecateMsg(\"rng()\", \"new RNG()\");\n\treturn new RNG(seed);\n}\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, new Line(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, new Line(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.p1.x, Math.min(c.center.x, r.p2.x));\n\tconst ny = Math.max(r.p1.y, Math.min(c.center.y, r.p2.y));\n\tconst nearestPoint = vec2(nx, ny);\n\treturn nearestPoint.dist(c.center) <= c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nexport function testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet c = false;\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c;\n\t\t}\n\t}\n\n\treturn c;\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nexport function testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nexport function minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nexport class Line {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Rect {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2;\n\tradius: number;\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\t}\n}\n","export default class FPSCounter {\n\n\tprivate buf: number[] = [];\n\tprivate timer: number = 0;\n\tfps: number = 0;\n\n\ttick(dt: number) {\n\n\t\tthis.buf.push(1 / dt);\n\t\tthis.timer += dt;\n\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0;\n\t\t\tthis.fps = Math.round(this.buf.reduce((a, b) => a + b) / this.buf.length);\n\t\t\tthis.buf = [];\n\t\t}\n\n\t}\n\n}\n","export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time;\n\t\tthis.action = action;\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false;\n\t\tthis.time -= dt;\n\t\tif (this.time <= 0) {\n\t\t\tthis.action();\n\t\t\tthis.finished = true;\n\t\t\tthis.time = 0;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treset(time) {\n\t\tthis.time = time;\n\t\tthis.finished = false;\n\t}\n\n}\n","import {\n\tvec2,\n\tvec3,\n\tVec3,\n\tRect,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n\tuid,\n\tdeprecate,\n\tdeprecateMsg,\n\tisDataURL,\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tGfxShader,\n\tGfxFont,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tCharTransformFunc,\n\tTexWrap,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tGfxTexData,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOutviewCompOpt,\n\tOutviewComp,\n\tCleanupCompOpt,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n\tKaboom,\n} from \"./types\";\n\nimport FPSCounter from \"./fps\";\nimport Timer from \"./timer\";\n\n// @ts-ignore\nimport apl386Src from \"./assets/apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./assets/apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./assets/sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./assets/sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./assets/bean.png\";\n// @ts-ignore\nimport burpBytes from \"./assets/burp.mp3\";\n// @ts-ignore\nimport kaSrc from \"./assets/ka.png\";\n// @ts-ignore\nimport boomSrc from \"./assets/boom.png\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\n// translate these key names to a simpler version\nconst KEY_ALIAS = {\n\t\"ArrowLeft\": \"left\",\n\t\"ArrowRight\": \"right\",\n\t\"ArrowUp\": \"up\",\n\t\"ArrowDown\": \"down\",\n\t\" \": \"space\",\n};\n\n// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_BUTTONS = [\n\t\"left\",\n\t\"middle\",\n\t\"right\",\n\t\"back\",\n\t\"forward\",\n];\n\n// don't trigger browser default event when these keys are pressed\nconst PREVENT_DEFAULT_KEYS = [\n\t\"space\",\n\t\"left\",\n\t\"right\",\n\t\"up\",\n\t\"down\",\n\t\"tab\",\n\t\"f1\",\n\t\"f2\",\n\t\"f3\",\n\t\"f4\",\n\t\"f5\",\n\t\"f6\",\n\t\"f7\",\n\t\"f8\",\n\t\"f9\",\n\t\"f10\",\n\t\"f11\",\n\t\"s\",\n];\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\n// audio gain range\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\n\n// audio speed range\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\n\n// audio detune range\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nconst DEF_ORIGIN = \"topleft\";\nconst DEF_GRAVITY = 1600;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\n// vertex format stride (vec3 pos, vec2 uv, vec4 color)\nconst STRIDE = 9;\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\n// transform the button state to the next state\n// e.g. a button might become \"pressed\" one frame, and it should become \"down\" next frame\nfunction processButtonState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\n// wrappers around full screen functions to work across browsers\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\n// convert origin string to a vec2 offset\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction createEmptyAudioBuffer() {\n\treturn new AudioBuffer({\n\t\tlength: 1,\n\t\tnumberOfChannels: 1,\n\t\tsampleRate: 44100\n\t});\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst app = (() => {\n\n\tconst root = gopt.root ?? document.body;\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\troot.appendChild(canvas);\n\t\treturn canvas;\n\t})();\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1;\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox) {\n\t\tcanvas.width = gopt.width * gscale;\n\t\tcanvas.height = gopt.height * gscale;\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth;\n\t\tcanvas.height = canvas.parentElement.offsetHeight;\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// TODO: .style is supposed to be readonly? alternative?\n\t// @ts-ignore\n\tcanvas.style = styles.join(\";\");\n\n\t// make canvas focusable\n\tcanvas.setAttribute(\"tabindex\", \"0\");\n\n\t// create webgl context\n\tconst gl = canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\treturn {\n\n\t\tcanvas: canvas,\n\t\tscale: gscale,\n\t\tgl: gl,\n\n\t\t// keep track of all button states\n\t\tkeyStates: {} as Record<Key, ButtonState>,\n\t\tmouseStates: {} as Record<MouseButton, ButtonState>,\n\n\t\t// input states from last frame, should reset every frame\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tisKeyReleased: false,\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\n\t\t// total time elapsed\n\t\ttime: 0,\n\t\t// real total time elapsed (including paused time)\n\t\trealTime: 0,\n\t\t// if we should skip next dt, to prevent the massive dt surge if user switch to another tab for a while and comeback\n\t\tskipTime: false,\n\t\t// how much time last frame took\n\t\tdt: 0.0,\n\t\t// total frames elapsed\n\t\tnumFrames: 0,\n\n\t\t// if we're on a touch device\n\t\tisTouch: (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0,\n\n\t\t// requestAnimationFrame id\n\t\tloopID: null,\n\t\t// if our game loop is currently stopped / paused\n\t\tstopped: false,\n\t\tpaused: false,\n\n\t\t// TODO: take fps counter out pure\n\t\tfpsCounter: new FPSCounter(),\n\n\t\t// if we finished loading all assets\n\t\tloaded: false,\n\n\t};\n\n})();\n\nconst gfx = (() => {\n\n\tconst gl = app.gl;\n\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\n\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\tconst emptyTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t);\n\n\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\tif (gopt.background) {\n\t\tconst c = Color.fromArray(gopt.background);\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, gopt.background[3] ?? 1);\n\t}\n\n\tgl.enable(gl.BLEND);\n\tgl.enable(gl.SCISSOR_TEST);\n\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t// we only use one vertex and index buffer that batches all draw calls\n\tconst vbuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t// vec3 pos\n\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\tgl.enableVertexAttribArray(0);\n\t// vec2 uv\n\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\tgl.enableVertexAttribArray(1);\n\t// vec4 color\n\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\tgl.enableVertexAttribArray(2);\n\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\tconst ibuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t// a checkerboard texture used for the default background\n\tconst bgTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t128, 128, 128, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t128, 128, 128, 255,\n\t\t]), 2, 2), {\n\t\t\twrap: \"repeat\",\n\t\t\tfilter: \"nearest\",\n\t\t},\n\t);\n\n\treturn {\n\n\t\t// keep track of how many draw calls we're doing this frame\n\t\tdrawCalls: 0,\n\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\tlastDrawCalls: 0,\n\n\t\t// gfx states\n\t\tdefShader: defShader,\n\t\tcurShader: defShader,\n\t\tdefTex: emptyTex,\n\t\tcurTex: emptyTex,\n\t\tcurUniform: {},\n\t\tvbuf: vbuf,\n\t\tibuf: ibuf,\n\n\t\t// local vertex / index buffer queue\n\t\tvqueue: [],\n\t\tiqueue: [],\n\n\t\ttransform: new Mat4(),\n\t\ttransformStack: [],\n\n\t\tbgTex: bgTex,\n\n\t\twidth: gopt.width,\n\t\theight: gopt.height,\n\n\t\tviewport: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: gl.drawingBufferWidth,\n\t\t\theight: gl.drawingBufferHeight,\n\t\t},\n\n\t};\n\n})();\n\nupdateViewport();\n\nconst audio = (() => {\n\n\t// TODO: handle when audio context is unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\tconst burpSnd = {\n\t\tbuf: createEmptyAudioBuffer(),\n\t};\n\n\t// load that burp sound\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"Failed to load burp.\")\n\t});\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tburpSnd,\n\t};\n\n})();\n\nconst assets = {\n\n\t// keep track of how many assets are loading / loaded, for calculaating progress\n\tnumLoading: 0,\n\tnumLoaded: 0,\n\n\t// prefix for when loading from a url\n\turlPrefix: \"\",\n\n\t// asset holders\n\tsprites: {},\n\tsounds: {},\n\tshaders: {},\n\tfonts: {},\n\n};\n\nconst game = {\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// root game object\n\t// these transforms are used as camera\n\troot: make([]),\n\n\ttimers: new IDList<Timer>(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\tscenes: {},\n\n\t// on screen log\n\tlogs: [],\n\n\t// camera\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t\ttransform: new Mat4(),\n\t},\n\n}\n\n// wrap individual loaders with global loader counter, for stuff like progress bar\nfunction load<T>(prom: Promise<T>): Promise<T> {\n\n\tassets.numLoading++;\n\n\t// wrapping another layer of promise because we are catching errors here internally and we also want users be able to catch errors, however only one catch is allowed per promise chain\n\treturn new Promise((resolve, reject) => {\n\t\tprom\n\t\t\t.then(resolve)\n\t\t\t.catch((err) => {\n\t\t\t\tdebug.error(err);\n\t\t\t\treject(err);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tassets.numLoading--;\n\t\t\t\tassets.numLoaded++;\n\t\t\t});\n\t}) as Promise<T>;\n\n}\n\n// get current load progress\nfunction loadProgress(): number {\n\treturn assets.numLoaded / (assets.numLoading + assets.numLoaded);\n}\n\n// global load path prefix\nfunction loadRoot(path?: string): string {\n\tif (path !== undefined) {\n\t\tassets.urlPrefix = path;\n\t}\n\treturn assets.urlPrefix;\n}\n\n// wrapper around fetch() that applies urlPrefix and basic error handling\nfunction fetchURL(path: string) {\n\tconst url = assets.urlPrefix + path;\n\treturn fetch(url)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch ${url}`);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\n// wrapper around image loader to get a Promise\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = isDataURL(src) ? src : assets.urlPrefix + src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => resolve(img);\n\t\t// TODO: truncate for long dataurl src\n\t\timg.onerror = () => reject(`Failed to load image from \"${src}\"`);\n\t});\n}\n\n// TODO: support SpriteLoadSrc\nfunction loadFont(\n\tname: string | null,\n\tsrc: string,\n\tgw: number,\n\tgh: number,\n\topt: FontLoadOpt = {},\n): Promise<FontData> {\n\treturn load(loadImg(src)\n\t\t.then((img) => {\n\t\t\tconst font = makeFont(\n\t\t\t\tmakeTex(img, opt),\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t\topt.chars ?? ASCII_CHARS\n\t\t\t);\n\t\t\tif (name) {\n\t\t\t\tassets.fonts[name] = font;\n\t\t\t}\n\t\t\treturn font;\n\t\t})\n\t);\n}\n\nfunction getSprite(name: string): SpriteData | null {\n\treturn assets.sprites[name] ?? null;\n}\n\nfunction getSound(name: string): SoundData | null {\n\treturn assets.sounds[name] ?? null;\n}\n\nfunction getFont(name: string): FontData | null {\n\treturn assets.fonts[name] ?? null;\n}\n\nfunction getShader(name: string): ShaderData | null {\n\treturn assets.shaders[name] ?? null;\n}\n\n// get an array of frames based on configuration on how to slice the image\nfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\tconst frames = [];\n\tconst qw = w / x;\n\tconst qh = h / y;\n\tfor (let j = 0; j < y; j++) {\n\t\tfor (let i = 0; i < x; i++) {\n\t\t\tframes.push(new Quad(\n\t\t\t\tdx + i * qw,\n\t\t\t\tdy + j * qh,\n\t\t\t\tqw,\n\t\t\t\tqh,\n\t\t\t));\n\t\t}\n\t}\n\treturn frames;\n}\n\nfunction loadSpriteAtlas(\n\tsrc: SpriteLoadSrc,\n\tdata: SpriteAtlasData | string\n): Promise<Record<string, SpriteData>> {\n\tif (typeof data === \"string\") {\n\t\t// TODO: this adds a new loader asyncly\n\t\treturn load(fetchURL(data)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t}\n\treturn load(loadSprite(null, src).then((atlas) => {\n\t\tconst map = {};\n\t\tconst w = atlas.tex.width;\n\t\tconst h = atlas.tex.height;\n\t\tfor (const name in data) {\n\t\t\tconst info = data[name];\n\t\t\tconst spr = {\n\t\t\t\ttex: atlas.tex,\n\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\tanims: info.anims,\n\t\t\t}\n\t\t\tassets.sprites[name] = spr;\n\t\t\tmap[name] = spr;\n\t\t}\n\t\treturn map;\n\t}));\n}\n\n// synchronously load sprite from local pixel data\nfunction loadRawSprite(\n\tname: string | null,\n\tsrc: GfxTexData,\n\topt: SpriteLoadOpt = {}\n) {\n\n\tconst tex = makeTex(src, opt);\n\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\tconst sprite = {\n\t\ttex: tex,\n\t\tframes: frames,\n\t\tanims: opt.anims || {},\n\t};\n\n\tif (name) {\n\t\tassets.sprites[name] = sprite;\n\t}\n\n\treturn sprite;\n\n}\n\n// load a sprite to asset manager\nfunction loadSprite(\n\tname: string | null,\n\tsrc: SpriteLoadSrc,\n\topt: SpriteLoadOpt = {\n\t\tsliceX: 1,\n\t\tsliceY: 1,\n\t\tanims: {},\n\t},\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`Expected sprite src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tloadImg(src)\n\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tfetchURL(src)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (data) => {\n\n\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = data.width;\n\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t});\n\n\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\tanims: data.anims,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t;\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadAseprite(\n\tname: string | null,\n\timgSrc: SpriteLoadSrc,\n\tjsonSrc: string\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tloadSprite(name, imgSrc)\n\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\tfetchURL(jsonSrc)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\treturn new Quad(\n\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject)\n\t\t\t\t\t;\n\t\t\t})\n\t\t\t.catch(reject);\n\n\t}));\n\n}\n\nfunction loadShader(\n\tname: string | null,\n\tvert?: string,\n\tfrag?: string,\n\tisUrl: boolean = false,\n): Promise<ShaderData> {\n\n\tfunction loadRawShader(\n\t\tname: string | null,\n\t\tvert: string | null,\n\t\tfrag: string | null,\n\t): ShaderData {\n\t\tconst shader = makeShader(vert, frag);\n\t\tif (name) {\n\t\t\tassets.shaders[name] = shader;\n\t\t}\n\t\treturn shader;\n\t}\n\n\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\tif (!vert && !frag) {\n\t\t\treturn reject(\"no shader\");\n\t\t}\n\n\t\tfunction resolveUrl(url?: string) {\n\t\t\treturn url ?\n\t\t\t\tfetchURL(url)\n\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t.catch(reject)\n\t\t\t\t: new Promise((r) => r(null));\n\t\t}\n\n\t\tif (isUrl) {\n\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept dataurl\n// load a sound to asset manager\nfunction loadSound(\n\tname: string | null,\n\tsrc: string,\n): Promise<SoundData> {\n\n\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tfetchURL(src)\n\t\t\t\t.then((res) => res.arrayBuffer())\n\t\t\t\t.then((data) => {\n\t\t\t\t\treturn new Promise((resolve2, reject2) =>\n\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\tconst snd = {\n\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t}\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(snd);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}\n\n\t}));\n\n}\n\nfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\treturn loadSprite(name, beanSrc);\n}\n\n// get / set master volume\nfunction volume(v?: number): number {\n\tif (v !== undefined) {\n\t\taudio.masterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t}\n\treturn audio.masterNode.gain.value;\n}\n\n// plays a sound, returns a control handle\nfunction play(\n\tsrc: SoundData | string,\n\topt: AudioPlayOpt = {\n\t\tloop: false,\n\t\tvolume: 1,\n\t\tspeed: 1,\n\t\tdetune: 0,\n\t\tseek: 0,\n\t},\n): AudioPlay {\n\n\t// TODO: clean?\n\tif (typeof src === \"string\") {\n\n\t\tconst pb = play({\n\t\t\tbuf: createEmptyAudioBuffer(),\n\t\t});\n\n\t\tonLoad(() => {\n\t\t\tconst snd = assets.sounds[src];\n\t\t\tif (!snd) {\n\t\t\t\tthrow new Error(`Sound not found: \"${src}\"`);\n\t\t\t}\n\t\t\tconst pb2 = play(snd, opt);\n\t\t\tfor (const k in pb2) {\n\t\t\t\tpb[k] = pb2[k];\n\t\t\t}\n\t\t});\n\n\t\treturn pb;\n\n\t}\n\n\tconst ctx = audio.ctx;\n\tlet stopped = false;\n\tlet srcNode = ctx.createBufferSource();\n\n\tsrcNode.buffer = src.buf;\n\tsrcNode.loop = opt.loop ? true : false;\n\n\tconst gainNode = ctx.createGain();\n\n\tsrcNode.connect(gainNode);\n\tgainNode.connect(audio.masterNode);\n\n\tconst pos = opt.seek ?? 0;\n\n\tsrcNode.start(0, pos);\n\n\tlet startTime = ctx.currentTime - pos;\n\tlet stopTime: number | null = null;\n\n\tconst handle = {\n\n\t\tstop() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pause();\n\t\t\tstartTime = ctx.currentTime;\n\t\t},\n\n\t\tplay(seek?: number) {\n\n\t\t\tif (!stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldNode = srcNode;\n\n\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\tif (srcNode.detune) {\n\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t}\n\n\t\t\tsrcNode.connect(gainNode);\n\n\t\t\tconst pos = seek ?? this.time();\n\n\t\t\tsrcNode.start(0, pos);\n\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\tstopped = false;\n\t\t\tstopTime = null;\n\n\t\t},\n\n\t\tpause() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsrcNode.stop();\n\t\t\tstopped = true;\n\t\t\tstopTime = ctx.currentTime;\n\t\t},\n\n\t\tisPaused(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tpaused(): boolean {\n\t\t\tdeprecateMsg(\"paused()\", \"isPaused()\");\n\t\t\treturn this.isPaused();\n\t\t},\n\n\t\tisStopped(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tstopped(): boolean {\n\t\t\tdeprecateMsg(\"stopped()\", \"isStopped()\");\n\t\t\treturn this.isStopped();\n\t\t},\n\n\t\t// TODO: affect time()\n\t\tspeed(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t}\n\t\t\treturn srcNode.playbackRate.value;\n\t\t},\n\n\t\tdetune(val?: number): number {\n\t\t\tif (!srcNode.detune) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t}\n\t\t\treturn srcNode.detune.value;\n\t\t},\n\n\t\tvolume(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t}\n\t\t\treturn gainNode.gain.value;\n\t\t},\n\n\t\tloop() {\n\t\t\tsrcNode.loop = true;\n\t\t},\n\n\t\tunloop() {\n\t\t\tsrcNode.loop = false;\n\t\t},\n\n\t\tduration(): number {\n\t\t\treturn src.buf.duration;\n\t\t},\n\n\t\ttime(): number {\n\t\t\tif (stopped) {\n\t\t\t\treturn stopTime - startTime;\n\t\t\t} else {\n\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t}\n\t\t},\n\n\t};\n\n\thandle.speed(opt.speed);\n\thandle.detune(opt.detune);\n\thandle.volume(opt.volume);\n\n\treturn handle;\n\n}\n\n// core kaboom logic\nfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\treturn play(audio.burpSnd, opt);\n}\n\n// TODO: take these webgl structures out pure\nfunction makeTex(\n\tdata: GfxTexData,\n\topt: GfxTexOpt = {}\n): GfxTexture {\n\n\tconst gl = app.gl;\n\tconst id = gl.createTexture();\n\n\tgl.bindTexture(gl.TEXTURE_2D, id);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\tconst filter = (() => {\n\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst wrap = (() => {\n\t\tswitch (opt.wrap) {\n\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t}\n\t})();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\treturn {\n\t\twidth: data.width,\n\t\theight: data.height,\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t},\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t},\n\t};\n\n}\n\nfunction makeShader(\n\tvertSrc: string | null = DEF_VERT,\n\tfragSrc: string | null = DEF_FRAG,\n): GfxShader {\n\n\tconst gl = app.gl;\n\tlet msg;\n\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\tgl.shaderSource(vertShader, vcode);\n\tgl.shaderSource(fragShader, fcode);\n\tgl.compileShader(vertShader);\n\tgl.compileShader(fragShader);\n\n\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tconst id = gl.createProgram();\n\n\tgl.attachShader(id, vertShader);\n\tgl.attachShader(id, fragShader);\n\n\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\tgl.linkProgram(id);\n\n\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\tif (msg !== \"\\n\") {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tbind() {\n\t\t\tgl.useProgram(id);\n\t\t},\n\n\t\tunbind() {\n\t\t\tgl.useProgram(null);\n\t\t},\n\n\t\tsend(uniform: Uniform) {\n\t\t\tthis.bind();\n\t\t\tfor (const name in uniform) {\n\t\t\t\tconst val = uniform[name];\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t} else if (val instanceof Vec3) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.unbind();\n\t\t},\n\n\t};\n\n}\n\nfunction makeFont(\n\ttex: GfxTexture,\n\tgw: number,\n\tgh: number,\n\tchars: string,\n): GfxFont {\n\n\tconst cols = tex.width / gw;\n\tconst rows = tex.height / gh;\n\tconst qw = 1.0 / cols;\n\tconst qh = 1.0 / rows;\n\tconst map: Record<string, Vec2> = {};\n\tconst charMap = chars.split(\"\").entries();\n\n\tfor (const [i, ch] of charMap) {\n\t\tmap[ch] = vec2(\n\t\t\t(i % cols) * qw,\n\t\t\tMath.floor(i / cols) * qh,\n\t\t);\n\t}\n\n\treturn {\n\t\ttex: tex,\n\t\tmap: map,\n\t\tqw: qw,\n\t\tqh: qh,\n\t};\n\n}\n\n// TODO: expose\nfunction drawRaw(\n\tverts: Vertex[],\n\tindices: number[],\n\tfixed: boolean,\n\ttex: GfxTexture = gfx.defTex,\n\tshader: GfxShader = gfx.defShader,\n\tuniform: Uniform = {},\n) {\n\n\ttex = tex ?? gfx.defTex;\n\tshader = shader ?? gfx.defShader;\n\n\t// flush on texture / shader change and overflow\n\tif (\n\t\ttex !== gfx.curTex\n\t\t|| shader !== gfx.curShader\n\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t) {\n\t\tflush();\n\t}\n\n\tfor (const v of verts) {\n\n\t\t// TODO: cache camTransform * gfxTransform?\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform);\n\n\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\tconst pt = screen2ndc(transform.multVec2(v.pos.xy()));\n\n\t\tgfx.vqueue.push(\n\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\tv.uv.x, v.uv.y,\n\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t);\n\n\t}\n\n\tfor (const i of indices) {\n\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length);\n\t}\n\n\tgfx.curTex = tex;\n\tgfx.curShader = shader;\n\tgfx.curUniform = uniform;\n\n}\n\n// draw all batched shapes\nfunction flush() {\n\n\tif (\n\t\t!gfx.curTex\n\t\t|| !gfx.curShader\n\t\t|| gfx.vqueue.length === 0\n\t\t|| gfx.iqueue.length === 0\n\t) {\n\t\treturn;\n\t}\n\n\tconst gl = app.gl;\n\n\tgfx.curShader.send(gfx.curUniform);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\tgfx.curShader.bind();\n\tgfx.curTex.bind();\n\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\tgfx.curTex.unbind();\n\tgfx.curShader.unbind();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\tgfx.iqueue = [];\n\tgfx.vqueue = [];\n\n\tgfx.drawCalls++;\n\n}\n\n// start a rendering frame, reset some states\nfunction frameStart() {\n\n\tapp.gl.clear(app.gl.COLOR_BUFFER_BIT);\n\n\tif (!gopt.background) {\n\t\tdrawUVQuad({\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tquad: new Quad(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\twidth() * app.scale / BG_GRID_SIZE,\n\t\t\t\theight() * app.scale / BG_GRID_SIZE,\n\t\t\t),\n\t\t\ttex: gfx.bgTex,\n\t\t\tfixed: true,\n\t\t})\n\t}\n\n\tgfx.drawCalls = 0;\n\tgfx.transformStack = [];\n\tgfx.transform = new Mat4();\n\n}\n\nfunction frameEnd() {\n\tflush();\n\tgfx.lastDrawCalls = gfx.drawCalls;\n}\n\nfunction drawCalls() {\n\treturn gfx.lastDrawCalls;\n}\n\n// convert a screen space coordinate to webgl normalized device coordinate\nfunction screen2ndc(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\tpt.x / width() * 2 - 1,\n\t\t-pt.y / height() * 2 + 1,\n\t);\n}\n\n// convert a webgl normalied device coordinate to screen space coordinate\nfunction ndc2screen(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\t(pt.x + 1) / 2 * width(),\n\t\t-(pt.y - 1) / 2 * height(),\n\t);\n}\n\nfunction applyMatrix(m: Mat4) {\n\tgfx.transform = m.clone();\n}\n\nfunction pushTranslate(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 0 && p.y === 0) return;\n\tgfx.transform = gfx.transform.translate(p);\n}\n\nfunction pushScale(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 1 && p.y === 1) return;\n\tgfx.transform = gfx.transform.scale(p);\n}\n\nfunction pushRotateX(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateX(a);\n}\n\nfunction pushRotateY(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateY(a);\n}\n\nfunction pushRotateZ(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateZ(a);\n}\n\nfunction pushTransform() {\n\tgfx.transformStack.push(gfx.transform.clone());\n}\n\nfunction popTransform() {\n\tif (gfx.transformStack.length > 0) {\n\t\tgfx.transform = gfx.transformStack.pop();\n\t}\n}\n\n// draw a uv textured quad\nfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\tconst q = opt.quad || new Quad(0, 0, 1, 1);\n\tconst color = opt.color || rgb(255, 255, 255);\n\tconst opacity = opt.opacity ?? 1;\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushRotateZ(opt.angle);\n\tpushScale(opt.scale);\n\tpushTranslate(offset);\n\n\tdrawRaw([\n\t\t{\n\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform);\n\n\tpopTransform();\n\n}\n\n// TODO: clean\nfunction drawTexture(opt: DrawTextureOpt) {\n\n\tif (!opt.tex) {\n\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t}\n\n\tconst q = opt.quad ?? new Quad(0, 0, 1, 1);\n\tconst w = opt.tex.width * q.w;\n\tconst h = opt.tex.height * q.h;\n\tconst scale = vec2(1);\n\n\tif (opt.tiled) {\n\n\t\t// TODO: draw fract\n\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t// TODO: rotation\n\t\tfor (let i = 0; i < repX; i++) {\n\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\t...opt,\n\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\tquad: q,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// TODO: should this ignore scale?\n\t\tif (opt.width && opt.height) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = opt.height / h;\n\t\t} else if (opt.width) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = scale.x;\n\t\t} else if (opt.height) {\n\t\t\tscale.y = opt.height / h;\n\t\t\tscale.x = scale.y;\n\t\t}\n\n\t\tdrawUVQuad({\n\t\t\t...opt,\n\t\t\t// @ts-ignore\n\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\ttex: opt.tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\n// TODO: use native asset loader tracking\nconst loading = new Set();\n\nfunction drawSprite(opt: DrawSpriteOpt) {\n\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\n\tconst spr = findAsset(opt.sprite, assets.sprites);\n\n\tif (!spr) {\n\n\t\t// if passes a source url, we load it implicitly\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\tif (!loading.has(opt.sprite)) {\n\t\t\t\tloading.add(opt.sprite);\n\t\t\t\tloadSprite(opt.sprite, opt.sprite)\n\t\t\t\t\t.then((a) => loading.delete(opt.sprite));\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t\t}\n\n\t}\n\n\tconst q = spr.frames[opt.frame ?? 0];\n\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\n\tdrawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || new Quad(0, 0, 1, 1)),\n\t\tuniform: opt.uniform,\n\t});\n\n}\n\n// generate vertices to form an arc\nfunction getArcPts(\n\tpos: Vec2,\n\tradiusX: number,\n\tradiusY: number,\n\tstart: number,\n\tend: number,\n\tres: number = 1,\n): Vec2[] {\n\n\t// normalize and turn start and end angles to radians\n\tstart = deg2rad(start % 360);\n\tend = deg2rad(end % 360);\n\tif (end <= start) end += Math.PI * 2;\n\n\t// TODO: better way to get this?\n\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\tconst step = (end - start) / nverts;\n\tconst pts = [];\n\n\t// calculate vertices\n\tfor (let a = start; a < end; a += step) {\n\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t}\n\n\t// doing this on the side due to possible floating point inaccuracy\n\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\treturn pts;\n\n}\n\nfunction drawRect(opt: DrawRectOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\tlet pts = [\n\t\tvec2(0, 0),\n\t\tvec2(w, 0),\n\t\tvec2(w, h),\n\t\tvec2(0, h),\n\t];\n\n\t// TODO: drawPolygon should handle generic rounded corners\n\tif (opt.radius) {\n\n\t\t// maxium radius is half the shortest side\n\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\tpts = [\n\t\t\tvec2(r, 0),\n\t\t\tvec2(w - r, 0),\n\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\tvec2(w, r),\n\t\t\tvec2(w, h - r),\n\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\tvec2(w - r, h),\n\t\t\tvec2(r, h),\n\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\tvec2(0, h - r),\n\t\t\tvec2(0, r),\n\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t];\n\n\t}\n\n\tdrawPolygon({ ...opt, offset, pts });\n\n}\n\nfunction drawLine(opt: DrawLineOpt) {\n\n\tconst { p1, p2 } = opt;\n\n\tif (!p1 || !p2) {\n\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t}\n\n\tconst w = opt.width || 1;\n\n\t// the displacement from the line end point to the corner point\n\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t// calculate the 4 corner points of the line polygon\n\tconst verts = [\n\t\tp1.sub(dis),\n\t\tp1.add(dis),\n\t\tp2.add(dis),\n\t\tp2.sub(dis),\n\t].map((p) => ({\n\t\tpos: vec3(p.x, p.y, 0),\n\t\tuv: vec2(0),\n\t\tcolor: opt.color ?? Color.WHITE,\n\t\topacity: opt.opacity ?? 1,\n\t}));\n\n\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n}\n\nfunction drawLines(opt: DrawLinesOpt) {\n\n\tconst pts = opt.pts;\n\n\tif (!pts) {\n\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t}\n\n\tif (pts.length < 2) {\n\t\treturn;\n\t}\n\n\tif (opt.radius && pts.length >= 3) {\n\n\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t}\n\n\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\tconst p1 = pts[i];\n\t\t\tconst p2 = pts[i + 1];\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: p1,\n\t\t\t\tp2: p2,\n\t\t\t});\n\t\t}\n\n\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t} else {\n\n\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: pts[i],\n\t\t\t\tp2: pts[i + 1],\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n\nfunction drawTriangle(opt: DrawTriangleOpt) {\n\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t}\n\treturn drawPolygon({\n\t\t...opt,\n\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t});\n}\n\n// TODO: origin\nfunction drawCircle(opt: DrawCircleOpt) {\n\n\tif (!opt.radius) {\n\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t}\n\n\tif (opt.radius === 0) {\n\t\treturn;\n\t}\n\n\tdrawEllipse({\n\t\t...opt,\n\t\tradiusX: opt.radius,\n\t\tradiusY: opt.radius,\n\t\tangle: 0,\n\t});\n\n}\n\n// TODO: use fan-like triangulation\nfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t}\n\n\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\treturn;\n\t}\n\n\tdrawPolygon({\n\t\t...opt,\n\t\tpts: getArcPts(\n\t\t\tvec2(0),\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\topt.start ?? 0,\n\t\t\topt.end ?? 360,\n\t\t\topt.resolution\n\t\t),\n\t\tradius: 0,\n\t});\n\n}\n\nfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\tif (!opt.pts) {\n\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t}\n\n\tconst npts = opt.pts.length;\n\n\tif (npts < 3) {\n\t\treturn;\n\t}\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushScale(opt.scale);\n\tpushRotateZ(opt.angle);\n\tpushTranslate(opt.offset);\n\n\tif (opt.fill !== false) {\n\n\t\tconst color = opt.color ?? Color.WHITE;\n\n\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\tuv: vec2(0, 0),\n\t\t\tcolor: color,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\t// TODO: better triangulation\n\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t.flat();\n\n\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tif (opt.outline) {\n\t\tdrawLines({\n\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\tradius: opt.radius,\n\t\t\twidth: opt.outline.width,\n\t\t\tcolor: opt.outline.color,\n\t\t\tuniform: opt.uniform,\n\t\t\tfixed: opt.fixed,\n\t\t});\n\t}\n\n\tpopTransform();\n\n}\n\nfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\tif (tr.angle) fchar.angle += tr.angle;\n\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\tif (tr.opacity) fchar.opacity *= tr.opacity;\n}\n\n// TODO: escape\nconst TEXT_STYLE_RE = /\\[(?<text>[^\\]]*)\\]\\.(?<style>[\\w\\.]+)+/g;\n\nfunction compileStyledText(text: string): {\n\tcharStyleMap: Record<number, {\n\t\tlocalIdx: number,\n\t\tstyles: string[],\n\t}>,\n\ttext: string,\n} {\n\n\tconst charStyleMap = {};\n\t// get the text without the styling syntax\n\tconst renderText = text.replace(TEXT_STYLE_RE, \"$1\");\n\tlet idxOffset = 0;\n\n\t// put each styled char index into a map for easy access when iterating each char\n\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\tconst styles = match.groups.style.split(\".\");\n\t\tconst origIdx = match.index - idxOffset;\n\t\tfor (\n\t\t\tlet i = origIdx;\n\t\t\ti < match.index + match.groups.text.length;\n\t\t\ti++\n\t\t) {\n\t\t\tcharStyleMap[i] = {\n\t\t\t\tlocalIdx: i - origIdx,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\t\t}\n\t\t// omit \"[\", \"]\", \".\" and the style text in the format string when calculating index\n\t\tidxOffset += 3 + match.groups.style.length;\n\t}\n\n\treturn {\n\t\tcharStyleMap: charStyleMap,\n\t\ttext: renderText,\n\t};\n\n}\n\nfunction findAsset<T>(src: string | T, lib: Record<string, T>, def?: string): T | undefined {\n\tif (src) {\n\t\treturn typeof src === \"string\" ? lib[src] : src;\n\t} else if (def) {\n\t\treturn lib[def];\n\t}\n}\n\n// format text and return a list of chars with their calculated position\nfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\tif (opt.text === undefined) {\n\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\");\n\t}\n\n\tconst font = findAsset(opt.font ?? gopt.font, assets.fonts, DEF_FONT);\n\n\tif (!font) {\n\t\tthrow new Error(`Font not found: ${opt.font}`);\n\t}\n\n\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\");\n\tconst chars = text.split(\"\");\n\tconst gw = font.qw * font.tex.width;\n\tconst gh = font.qh * font.tex.height;\n\tconst size = opt.size || gh;\n\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\tconst cw = scale.x * gw + (opt.letterSpacing ?? 0);\n\tconst ch = scale.y * gh + (opt.lineSpacing ?? 0);\n\tlet curX = 0;\n\tlet th = ch;\n\tlet tw = 0;\n\tconst flines = [];\n\tlet curLine = [];\n\tlet lastSpace = null;\n\tlet cursor = 0;\n\n\twhile (cursor < chars.length) {\n\n\t\tlet char = chars[cursor];\n\n\t\t// check new line\n\t\tif (char === \"\\n\") {\n\t\t\t// always new line on '\\n'\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tlastSpace = null;\n\t\t\tcurLine.push(char);\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t// new line on last word if width exceeds\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tif (lastSpace != null) {\n\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\tchar = chars[cursor];\n\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t}\n\t\t\tlastSpace = null;\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t}\n\n\t\t// push char\n\t\tif (char !== \"\\n\") {\n\t\t\tcurLine.push(char);\n\t\t\tcurX += cw;\n\t\t\tif (char === \" \") {\n\t\t\t\tlastSpace = curLine.length;\n\t\t\t}\n\t\t}\n\n\t\ttw = Math.max(tw, curX);\n\t\tcursor++;\n\n\t}\n\n\tflines.push(curLine);\n\n\tif (opt.width) {\n\t\ttw = opt.width;\n\t}\n\n\t// whole text offset\n\tconst fchars = [];\n\tconst pos = vec2(opt.pos || 0);\n\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t// this math is complicated i forgot how it works instantly\n\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\tlet idx = 0;\n\n\tflines.forEach((line, ln) => {\n\n\t\t// line offset\n\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\tline.forEach((char, cn) => {\n\t\t\tconst qpos = font.map[char];\n\t\t\tconst x = cn * cw;\n\t\t\tconst y = ln * ch;\n\t\t\tif (qpos) {\n\t\t\t\tconst fchar: FormattedChar = {\n\t\t\t\t\ttex: font.tex,\n\t\t\t\t\tquad: new Quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\tch: char,\n\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\tscale: scale,\n\t\t\t\t\tangle: 0,\n\t\t\t\t\tuniform: opt.uniform,\n\t\t\t\t\tfixed: opt.fixed,\n\t\t\t\t}\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, char)\n\t\t\t\t\t\t: opt.transform;\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst { styles, localIdx } = charStyleMap[idx];\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name];\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(localIdx, char)\n\t\t\t\t\t\t\t: style;\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfchars.push(fchar);\n\t\t\t}\n\t\t\tidx += 1;\n\t\t});\n\t});\n\n\treturn {\n\t\twidth: tw,\n\t\theight: th,\n\t\tchars: fchars,\n\t};\n\n}\n\nfunction drawText(opt: DrawTextOpt) {\n\tdrawFormattedText(formatText(opt));\n}\n\n// TODO: rotation\nfunction drawFormattedText(ftext: FormattedText) {\n\tfor (const ch of ftext.chars) {\n\t\tdrawUVQuad({\n\t\t\ttex: ch.tex,\n\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\tpos: ch.pos,\n\t\t\tscale: ch.scale,\n\t\t\tangle: ch.angle,\n\t\t\tcolor: ch.color,\n\t\t\topacity: ch.opacity,\n\t\t\tquad: ch.quad,\n\t\t\t// TODO: topleft\n\t\t\torigin: \"center\",\n\t\t\tuniform: ch.uniform,\n\t\t\tfixed: ch.fixed,\n\t\t});\n\t}\n}\n\n/**\n * Update viewport based on user setting and fullscreen state\n */\nfunction updateViewport() {\n\n\tconst gl = app.gl;\n\n\t// canvas size\n\tconst cw = gl.drawingBufferWidth;\n\tconst ch = gl.drawingBufferHeight;\n\n\t// game size\n\tconst gw = width();\n\tconst gh = height();\n\n\tif (isFullscreen()) {\n\t\t// TODO: doesn't work with letterbox\n\t\tconst ww = window.innerWidth;\n\t\tconst wh = window.innerHeight;\n\t\tconst rw = ww / wh;\n\t\tconst rc = cw / ch;\n\t\tif (rw > rc) {\n\t\t\tconst sw = window.innerHeight * rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: wh,\n\t\t\t};\n\t\t} else {\n\t\t\tconst sh = window.innerWidth / rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\twidth: ww,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\n\tif (gopt.letterbox) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\");\n\t\t}\n\n\t\tconst rc = cw / ch;\n\t\tconst rg = gopt.width / gopt.height;\n\n\t\tif (rc > rg) {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = ch * rg;\n\t\t\t\tgfx.height = ch;\n\t\t\t}\n\t\t\tconst sw = ch * rg;\n\t\t\tconst sh = ch;\n\t\t\tconst x = (cw - sw) / 2;\n\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\tgl.viewport(x, 0, sw, ch);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: ch,\n\t\t\t};\n\t\t} else {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = cw;\n\t\t\t\tgfx.height = cw / rg;\n\t\t\t}\n\t\t\tconst sw = cw;\n\t\t\tconst sh = cw / rg;\n\t\t\tconst y = (ch - sh) / 2;\n\t\t\tgl.scissor(0, y, sw, sh);\n\t\t\tgl.viewport(0, y, cw, sh);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: y,\n\t\t\t\twidth: cw,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\n\t\treturn;\n\n\t}\n\n\tif (gopt.stretch) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Stretching requires width and height defined.\");\n\t\t}\n\n\t\tgl.viewport(0, 0, cw, ch);\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t};\n\n\t\treturn;\n\t}\n\n\tgfx.width = cw / app.scale;\n\tgfx.height = ch / app.scale;\n\tgl.viewport(0, 0, cw, ch);\n\n\tgfx.viewport = {\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: cw,\n\t\theight: ch,\n\t};\n\n}\n\n// get game width\nfunction width(): number {\n\treturn gfx.width;\n}\n\n// get game height\nfunction height(): number {\n\treturn gfx.height;\n}\n\n// TODO: support remove events\napp.canvas.addEventListener(\"mousemove\", (e) => {\n\tapp.mousePos = vec2(\n\t\t(e.offsetX - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t(e.offsetY - gfx.viewport.y) * height() / gfx.viewport.height,\n\t);\n\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"mousedown\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"pressed\";\n\t}\n});\n\napp.canvas.addEventListener(\"mouseup\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"released\";\n\t}\n});\n\napp.canvas.addEventListener(\"keydown\", (e) => {\n\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\n\tif (PREVENT_DEFAULT_KEYS.includes(k)) {\n\t\te.preventDefault();\n\t}\n\n\tif (k.length === 1) {\n\t\tapp.charInputted.push(e.key);\n\t}\n\n\tif (k === \"space\") {\n\t\tapp.charInputted.push(\" \");\n\t}\n\n\tif (e.repeat) {\n\t\tapp.isKeyPressedRepeat = true;\n\t\tapp.keyStates[k] = \"rpressed\";\n\t} else {\n\t\tapp.isKeyPressed = true;\n\t\tapp.keyStates[k] = \"pressed\";\n\t}\n\n});\n\napp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\tapp.keyStates[k] = \"released\";\n\tapp.isKeyReleased = true;\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable long tap context menu\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.mouseStates[\"left\"] = \"pressed\";\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable scrolling\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchcancel\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"contextmenu\", function (e) {\n\te.preventDefault();\n});\n\ndocument.addEventListener(\"visibilitychange\", () => {\n\tswitch (document.visibilityState) {\n\t\tcase \"visible\":\n\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\tapp.skipTime = true;\n\t\t\t// TODO: don't resume if debug.paused\n\t\t\taudio.ctx.resume();\n\t\t\tbreak;\n\t\tcase \"hidden\":\n\t\t\taudio.ctx.suspend();\n\t\t\tbreak;\n\t}\n});\n\n// TODO: not quite working\n// window.addEventListener(\"resize\", () => {\n// \tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n// \t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n// \t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n// \t}\n// });\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos.clone();\n}\n\nfunction mouseDeltaPos(): Vec2 {\n\treturn app.mouseDeltaPos.clone();\n}\n\nfunction isMousePressed(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\";\n}\n\nfunction isMouseDown(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n}\n\nfunction isMouseReleased(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"released\";\n}\n\nfunction isMouseMoved(): boolean {\n\treturn app.isMouseMoved;\n}\n\nfunction isKeyPressed(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressed;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n}\n\nfunction isKeyPressedRepeat(k: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressedRepeat;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n}\n\nfunction isKeyDown(k: string): boolean {\n\treturn app.keyStates[k] === \"pressed\"\n\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t|| app.keyStates[k] === \"down\";\n}\n\nfunction isKeyReleased(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyReleased;\n\t} else {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n}\n\nfunction charInputted(): string[] {\n\treturn [...app.charInputted];\n}\n\nfunction time(): number {\n\treturn app.time;\n}\n\n// get a base64 png image of canvas\nfunction screenshot(): string {\n\treturn app.canvas.toDataURL();\n}\n\n// TODO: custom cursor\nfunction cursor(c?: Cursor): Cursor {\n\tif (c) {\n\t\tapp.canvas.style.cursor = c;\n\t}\n\treturn app.canvas.style.cursor;\n}\n\nfunction fullscreen(f: boolean = true) {\n\tif (f) {\n\t\tenterFullscreen(app.canvas);\n\t} else {\n\t\texitFullscreen();\n\t}\n}\n\nfunction isFullscreen(): boolean {\n\treturn Boolean(getFullscreenElement());\n}\n\nfunction quit() {\n\tcancelAnimationFrame(app.loopID);\n\tapp.stopped = true;\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: () => app.fpsCounter.fps,\n\tobjCount(): number {\n\t\t// TODO: recursive count\n\t\treturn game.root.children.length;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: () => gfx.drawCalls,\n\tclearLog: () => game.logs = [],\n\tlog: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].info`),\n\terror: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].error`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn app.paused;\n\t},\n\tset paused(v) {\n\t\tapp.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction dt() {\n\treturn app.dt * debug.timeScale;\n}\n\nfunction mouseWorldPos(): Vec2 {\n\tdeprecateMsg(\"mouseWorldPos()\", \"toWorld(mousePos())\");\n\treturn toWorld(mousePos());\n}\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.cam.transform.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.cam.transform.invert().multVec2(p);\n}\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tlet events = {};\n\n\tconst obj = {\n\n\t\t_id: uid(),\n\t\thidden: false,\n\t\tpaused: false,\n\t\tchildren: [],\n\t\tparent: null,\n\n\t\t// TODO: accept gameobj\n\t\tadd<T2>(comps: CompList<T2>): GameObj<T2> {\n\t\t\tif (this !== game.root) {\n\t\t\t\tthrow new Error(\"Children game object not supported yet\");\n\t\t\t}\n\t\t\tconst obj = make(comps);\n\t\t\tobj.parent = this;\n\t\t\tobj.trigger(\"add\");\n\t\t\tonLoad(() => obj.trigger(\"load\"));\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\t// TODO: use add()\n\t\treadd(obj: GameObj): GameObj {\n\t\t\tthis.remove(obj);\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\tremove(obj: GameObj): void {\n\t\t\tconst idx = this.children.indexOf(obj);\n\t\t\tif (idx !== -1) {\n\t\t\t\tobj.parent = null;\n\t\t\t\tobj.trigger(\"destroy\");\n\t\t\t\tthis.children.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t\tremoveAll(tag: Tag) {\n\t\t\tthis.every(tag, (obj) => this.remove(obj));\n\t\t},\n\n\t\tupdate() {\n\t\t\tif (this.paused) return;\n\t\t\tthis.revery((child) => child.update());\n\t\t\tthis.trigger(\"update\");\n\t\t},\n\n\t\tdraw() {\n\t\t\tif (this.hidden) return;\n\t\t\tpushTransform();\n\t\t\tpushTranslate(this.pos);\n\t\t\tpushScale(this.scale);\n\t\t\tpushRotateZ(this.angle);\n\t\t\tthis.every((child) => child.draw());\n\t\t\tthis.trigger(\"draw\");\n\t\t\tpopTransform();\n\t\t},\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", checkDeps));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\t// TODO: a recursive variant\n\t\tget(t?: Tag | Tag[]): GameObj[] {\n\t\t\treturn this.children\n\t\t\t\t.filter((child) => t ? child.is(t) : true)\n\t\t\t\t.sort((o1, o2) => {\n\t\t\t\t\t// TODO: layers are deprecated\n\t\t\t\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\t\t\t\tif (l1 == l2) {\n\t\t\t\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn l1 - l2;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\n\t\tevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\trevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().reverse().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).reverse().forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\texists(): boolean {\n\t\t\tif (this.parent === game.root) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.parent?.exists();\n\t\t\t}\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\tconsole.warn(\"action() is deprecated. Use onUpdate() instead\")\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\t\t\tthis.parent?.remove(this);\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t\tclearEvents() {\n\t\t\tevents = {}\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onUpdate(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onDraw(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push(new Timer(t, () => {\n\t\t\tif (f) f();\n\t\t\tresolve();\n\t\t}))\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => isMouseMoved() && f(mousePos(), mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => charInputted().forEach((ch) => f(ch)));\n}\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", burp);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tgame.root.every((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// TODO\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(dir: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction outview(opt: OutviewCompOpt = {}): OutviewComp {\n\tlet timer = 0;\n\tlet isOut = false;\n\treturn {\n\t\tid: \"outview\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tisOutOfView(): boolean {\n\t\t\tconst offset = vec2(opt.offset ?? 0);\n\t\t\tconst screenRect = new Rect(\n\t\t\t\tvec2(0, 0).sub(offset),\n\t\t\t\tvec2(width(), height()).add(offset),\n\t\t\t);\n\t\t\treturn !testAreaRect(this.screenArea(), screenRect);\n\t\t},\n\t\tonExitView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"exitView\", action);\n\t\t},\n\t\tonEnterView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"enterView\", action);\n\t\t},\n\t\tupdate() {\n\t\t\tif (this.isOutOfView()) {\n\t\t\t\tif (!isOut) {\n\t\t\t\t\tthis.trigger(\"exitView\");\n\t\t\t\t\tisOut = true;\n\t\t\t\t}\n\t\t\t\tif (opt.delay) {\n\t\t\t\t\ttimer += dt();\n\t\t\t\t\tif (timer < opt.delay) return\n\t\t\t\t}\n\t\t\t\tif (opt.hide) this.hidden = true;\n\t\t\t\tif (opt.pause) this.paused = true;\n\t\t\t\tif (opt.destroy) this.destroy();\n\t\t\t} else {\n\t\t\t\tif (isOut) {\n\t\t\t\t\tthis.trigger(\"enterView\");\n\t\t\t\t\tisOut = false;\n\t\t\t\t}\n\t\t\t\ttimer = 0;\n\t\t\t\tif (opt.hide) this.hidden = false;\n\t\t\t\tif (opt.pause) this.paused = false;\n\t\t\t}\n\t\t},\n\t\tinspect() {\n\t\t\treturn this.isOutOfView();\n\t\t},\n\t};\n}\n\nfunction cleanup(opt: (number | undefined) | CleanupCompOpt = {}): CleanupComp {\n\tif (typeof opt === \"number\") {\n\t\tdeprecateMsg(\"clean(time)\", \"cleanup({ delay: time })\");\n\t\treturn {\n\t\t\t...outview({\n\t\t\t\tdestroy: true,\n\t\t\t\tdelay: opt,\n\t\t\t}),\n\t\t\tid: \"cleanup\",\n\t\t};\n\t}\n\treturn {\n\t\t...outview({\n\t\t\tdestroy: true,\n\t\t\tonExitView: opt.onCleanup,\n\t\t\toffset: opt.offset,\n\t\t\tdelay: opt.delay,\n\t\t}),\n\t\tid: \"cleanup\",\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\t// TODO: collect\n\t\t\t\tthis.onHover(() => cursor(this.area.cursor));\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos());\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\tdeprecateMsg(\"clicks()\", \"onClick()\");\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\tdeprecateMsg(\"hovers()\", \"onHover()\");\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\tdeprecateMsg(\"collides()\", \"onCollide()\");\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tgame.root.every(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tgame.root.every(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: doesn't work with nested parent transforms\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: toScreen(area.p1),\n\t\t\t\t\tp2: toScreen(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tfixed: obj.fixed,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = spr.frames[0].clone();\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\tconst ftext = formatText({\n\t\t\t...getRenderProps(obj),\n\t\t\ttext: obj.text + \"\",\n\t\t\tsize: obj.textSize,\n\t\t\tfont: obj.font,\n\t\t\twidth: opt.width && obj.width,\n\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\ttransform: obj.transform,\n\t\t\tstyles: obj.styles,\n\t\t});\n\n\t\tobj.width = ftext.width / (obj.scale?.x || 1);\n\t\tobj.height = ftext.height / (obj.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: opt.width,\n\t\theight: 0,\n\t\tlineSpacing: opt.lineSpacing,\n\t\tletterSpacing: opt.letterSpacing,\n\t\ttransform: opt.transform,\n\t\tstyles: opt.styles,\n\n\t\tload() {\n\t\t\tupdate(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawFormattedText(update(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tdrawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tdrawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tdrawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(time?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (time && action) {\n\t\ttimers.pushd(new Timer(time, action));\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(time: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd(new Timer(time, action));\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\tif (timer.tick(dt())) {\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\tdeprecateMsg(\"grounded()\", \"isGrounded()\");\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\tdeprecateMsg(\"falling()\", \"isFalling()\");\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(\n\tinitState: string,\n\tstateList?: string[],\n\ttransitions?: Record<string, string | string[]>,\n): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\n\t\tid: \"state\",\n\t\tstate: initState,\n\n\t\tenterState(state: string, ...args) {\n\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\n\t\t\tconst oldState = this.state;\n\n\t\t\tif (transitions) {\n\n\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t: transitions[oldState] as string[];\n\n\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttrigger(\"leave\", oldState, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", state, ...args);\n\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args);\n\n\t\t},\n\n\t\tonStateTransition(from: string, to: string, action: () => void) {\n\t\t\ton(\"enter\", `${from} -> ${to}`, action);\n\t\t},\n\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn this.state;\n\t\t},\n\n\t};\n\n}\n\nfunction onLoad(cb: () => void): void {\n\tif (app.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.root.every((obj) => {\n\t\t\tif (!obj.is(\"stay\")) {\n\t\t\t\tgame.root.remove(obj);\n\t\t\t}\n\t\t})\n\n\t\tgame.root.clearEvents();\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t};\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = game.root.add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tobj.destroy();\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t},\n\n\t};\n\n}\n\nfunction focus() {\n\tdeprecateMsg(\"focus()\", \"canvas.focus()\");\n\tapp.canvas.focus();\n}\n\nfunction isFocused(): boolean {\n\treturn document.activeElement === app.canvas;\n}\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\n// aliases for root game obj operations\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\treturn game.root.add(comps);\n}\n\nfunction readd<T>(obj: GameObj<T>): GameObj<T> {\n\treturn game.root.readd(obj);\n}\n\nfunction destroy(obj: GameObj) {\n\treturn game.root.remove(obj);\n}\n\nfunction destroyAll(tag: Tag) {\n\treturn game.root.removeAll(tag);\n}\n\nfunction get(...args) {\n\treturn game.root.get(...args);\n}\n\nfunction every(...args) {\n\t// @ts-ignore\n\treturn game.root.every(...args);\n}\n\nfunction revery(...args) {\n\t// @ts-ignore\n\treturn game.root.revery(...args);\n}\n\ninterface ExplodeComp extends Comp {\n}\n\nfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\tlet time = 0;\n\treturn {\n\t\tid: \"explode\",\n\t\trequire: [ \"scale\", ],\n\t\tupdate() {\n\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\tif (s < 0) {\n\t\t\t\tdestroy(this);\n\t\t\t}\n\t\t\tthis.scale = vec2(s);\n\t\t\ttime += dt();\n\t\t},\n\t};\n}\n\nlet kaSprite = null;\nlet boomSprite = null;\n\nloadSprite(null, kaSrc).then((spr) => kaSprite = spr);\nloadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n// TODO: use children obj\nfunction addKaboom(p: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\tconst speed = (opt.speed || 1) * 5;\n\tconst s = opt.scale || 1;\n\n\tconst boom = add([\n\t\tpos(p),\n\t\tsprite(boomSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\texplode(speed, s),\n\t\t...(opt.boomComps ?? (() => []))(),\n\t]);\n\n\tconst ka = add([\n\t\tpos(p),\n\t\tsprite(kaSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\ttimer(0.4 / speed, () => ka.use(explode(speed, s))),\n\t\t...(opt.kaComps ?? (() => []))(),\n\t]);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tdestroy(ka);\n\t\t\tdestroy(boom);\n\t\t},\n\t};\n\n}\n\nfunction frames() {\n\treturn app.numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\tgame.root.update();\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst cam = game.cam;\n\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.transform = new Mat4()\n\t\t.translate(center())\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(cam.pos.scale(-1).add(shake))\n\t\t;\n\n\tgame.root.draw();\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = loadProgress();\n\n\tif (progress === 1) {\n\t\tapp.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / app.scale;\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tdrawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / app.scale,\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawInspectText(pos, txt) {\n\n\tconst pad = vec2(8);\n\n\tpushTransform();\n\tpushTranslate(pos);\n\tpushScale(1 / app.scale);\n\n\tconst ftxt = formatText({\n\t\ttext: txt,\n\t\tfont: assets.fonts[DBG_FONT],\n\t\tsize: 16,\n\t\tpos: pad,\n\t\tcolor: rgb(255, 255, 255),\n\t\tfixed: true,\n\t});\n\n\tconst bw = ftxt.width + pad.x * 2;\n\tconst bh = ftxt.height + pad.x * 2;\n\n\tif (pos.x + bw / app.scale >= width()) {\n\t\tpushTranslate(vec2(-bw, 0));\n\t}\n\n\tif (pos.y + bh / app.scale >= height()) {\n\t\tpushTranslate(vec2(0, -bh));\n\t}\n\n\tdrawRect({\n\t\twidth: bw,\n\t\theight: bh,\n\t\tcolor: rgb(0, 0, 0),\n\t\tradius: 4,\n\t\topacity: 0.8,\n\t\tfixed: true,\n\t});\n\n\tdrawFormattedText(ftxt);\n\tpopTransform();\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst lcolor = Color.fromArray(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\t// draw area outline\n\t\tgame.root.every((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4);\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tdrawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t\tfixed: obj.fixed,\n\t\t\t});\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectText(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectText(vec2(8 / app.scale), `FPS: ${debug.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), 0);\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tdrawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = formatText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tdrawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tdrawFormattedText(ftxt);\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(24, -24);\n\n\t\tdrawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, time() * 4),\n\t\t\tfixed: true,\n\t\t});\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.showLog && game.logs.length > 0) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(8, -8);\n\n\t\tconst pad = 8;\n\t\tconst max = gopt.logMax ?? 1;\n\n\t\tif (game.logs.length > max) {\n\t\t\tgame.logs = game.logs.slice(0, max);\n\t\t}\n\n\t\tconst ftext = formatText({\n\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tpos: vec2(pad, -pad),\n\t\t\torigin: \"botleft\",\n\t\t\tsize: 16,\n\t\t\twidth: width() * app.scale * 0.6,\n\t\t\tlineSpacing: pad / 2,\n\t\t\tfixed: true,\n\t\t\tstyles: {\n\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\twidth: ftext.width + pad * 2,\n\t\t\theight: ftext.height + pad * 2,\n\t\t\torigin: \"botleft\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\tradius: 4,\n\t\t\topacity: 0.8,\n\t\t\tfixed: true,\n\t\t});\n\n\t\tdrawFormattedText(ftext);\n\t\tpopTransform();\n\n\t}\n\n}\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tdebug.error(`Error: ${e.error.message}`);\n\tquit();\n\trun(() => {\n\t\tif (loadProgress() === 1) {\n\t\t\tframeStart();\n\t\t\tdrawDebug();\n\t\t\tframeEnd();\n\t\t}\n\t});\n});\n\nfunction run(f: () => void) {\n\n\tconst frame = (t: number) => {\n\n\t\tif (document.visibilityState !== \"visible\") {\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\treturn;\n\t\t}\n\n\t\tconst realTime = t / 1000;\n\t\tconst realDt = realTime - app.realTime;\n\n\t\tapp.realTime = realTime;\n\n\t\tif (!app.skipTime) {\n\t\t\tapp.dt = realDt;\n\t\t\tapp.time += app.dt;\n\t\t\tapp.fpsCounter.tick(app.dt);\n\t\t}\n\n\t\tapp.skipTime = false;\n\t\tapp.numFrames++;\n\n\t\tf();\n\n\t\tfor (const k in app.keyStates) {\n\t\t\tapp.keyStates[k] = processButtonState(app.keyStates[k]);\n\t\t}\n\n\t\tfor (const m in app.mouseStates) {\n\t\t\tapp.mouseStates[m] = processButtonState(app.mouseStates[m]);\n\t\t}\n\n\t\tapp.charInputted = [];\n\t\tapp.isMouseMoved = false;\n\t\tapp.isKeyPressed = false;\n\t\tapp.isKeyPressedRepeat = false;\n\t\tapp.isKeyReleased = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t};\n\n\tapp.stopped = false;\n\tapp.loopID = requestAnimationFrame(frame);\n\n}\n\n// main game loop\nrun(() => {\n\n\t// running this every frame now mainly because isFullscreen() is not updated real time when requested fullscreen\n\tupdateViewport();\n\n\tif (!app.loaded) {\n\t\tframeStart();\n\t\tdrawLoadScreen();\n\t\tframeEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tframeStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tframeEnd();\n\n\t}\n\n});\n\nloadFont(\n\t\"apl386\",\n\tapl386Src,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"apl386o\",\n\tapl386oSrc,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"sink\",\n\tsinkSrc,\n\t6,\n\t8,\n\t{\n\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t}\n);\n\nloadFont(\n\t\"sinko\",\n\tsinkoSrc,\n\t8,\n\t10,\n);\n\nframeStart();\nframeEnd();\n\n// the exported ctx handle\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot,\n\tloadSprite,\n\tloadSpriteAtlas,\n\tloadSound,\n\tloadFont,\n\tloadShader,\n\tloadAseprite,\n\tloadPedit,\n\tloadBean,\n\tload,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime,\n\tscreenshot,\n\trecord,\n\tisFocused,\n\tfocus,\n\tcursor,\n\tregCursor,\n\tfullscreen,\n\tisFullscreen,\n\tonLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\toutview,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos,\n\tisKeyDown,\n\tisKeyPressed,\n\tisKeyPressedRepeat,\n\tisKeyReleased,\n\tisMouseDown,\n\tisMousePressed,\n\tisMouseReleased,\n\tisMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume,\n\tburp,\n\taudioCtx: audio.ctx,\n\t// math\n\tTimer,\n\tLine,\n\tRect,\n\tCircle,\n\tVec2,\n\tColor,\n\tMat4,\n\tQuad,\n\tRNG,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tformatText,\n\tdrawRect,\n\tdrawLine,\n\tdrawLines,\n\tdrawTriangle,\n\tdrawCircle,\n\tdrawEllipse,\n\tdrawUVQuad,\n\tdrawPolygon,\n\tdrawFormattedText,\n\tpushTransform,\n\tpopTransform,\n\tpushTranslate,\n\tpushRotate: pushRotateZ,\n\tpushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dom\n\tcanvas: app.canvas,\n\t// misc\n\taddKaboom,\n\t// dirs\n\tLEFT: Vec2.LEFT,\n\tRIGHT: Vec2.RIGHT,\n\tUP: Vec2.UP,\n\tDOWN: Vec2.DOWN,\n\t// colors\n\tRED: Color.RED,\n\tGREEN: Color.GREEN,\n\tBLUE: Color.BLUE,\n\tYELLOW: Color.YELLOW,\n\tMAGENTA: Color.MAGENTA,\n\tCYAN: Color.CYAN,\n\tWHITE: Color.WHITE,\n\tBLACK: Color.BLACK,\n\t// deprecated\n\tkeyIsDown: deprecate(\"keyIsDown()\", \"isKeyDown()\", isKeyDown),\n\tkeyIsPressed: deprecate(\"keyIsPressed()\", \"isKeyPressed()\", isKeyPressed),\n\tkeyIsPressedRep: deprecate(\"keyIsPressedRep()\", \"isKeyPressedRepeat()\", isKeyPressedRepeat),\n\tkeyIsReleased: deprecate(\"keyIsReleased()\", \"isKeyReleased()\", isKeyReleased),\n\tmouseIsDown: deprecate(\"mouseIsDown()\", \"isMouseDown()\", isMouseDown),\n\tmouseIsClicked: deprecate(\"mouseIsClicked()\", \"isMousePressed()\", isMousePressed),\n\tmouseIsReleased: deprecate(\"mouseIsReleased()\", \"isMouseReleased()\", isMouseReleased),\n\tmouseIsMoved: deprecate(\"mouseIsMoved()\", \"isMouseMoved()\", isMouseMoved),\n\tdir: deprecate(\"dir()\", \"Vec2.fromAngle()\", Vec2.fromAngle),\n\taction: deprecate(\"action()\", \"onUpdate()\", onUpdate),\n\trender: deprecate(\"render()\", \"onDraw()\", onDraw),\n\tcollides: deprecate(\"collides()\", \"onCollide()\", onCollide),\n\tclicks: deprecate(\"clicks()\", \"onClick()\", onClick),\n\thovers: deprecate(\"hovers()\", \"onHover()\", onHover),\n\tkeyDown: deprecate(\"keyDown()\", \"onKeyDown()\", onKeyDown),\n\tkeyPress: deprecate(\"keyPress()\", \"onKeyPress()\", onKeyPress),\n\tkeyPressRep: deprecate(\"keyPressRep()\", \"onKeyPressRepeat()\", onKeyPressRepeat),\n\tkeyRelease: deprecate(\"keyRelease()\", \"onKeyRelease()\", onKeyRelease),\n\tmouseDown: deprecate(\"mouseDown()\", \"onMouseDown()\", onMouseDown),\n\tmouseClick: deprecate(\"mouseClick()\", \"onMousePress()\", onMousePress),\n\tmouseRelease: deprecate(\"mouseRelease()\", \"onMouseRelease()\", onMouseRelease),\n\tmouseMove: deprecate(\"mouseMove()\", \"onMouseMove()\", onMouseMove),\n\tcharInput: deprecate(\"charInput()\", \"onCharInput()\", onCharInput),\n\ttouchStart: deprecate(\"touchStart()\", \"onTouchStart()\", onTouchStart),\n\ttouchMove: deprecate(\"touchMove()\", \"onTouchMove()\", onTouchMove),\n\ttouchEnd: deprecate(\"touchEnd()\", \"onTouchEnd()\", onTouchEnd),\n\tfocused: deprecate(\"focused()\", \"isFocused()\", isFocused),\n\tready: deprecate(\"ready()\", \"onLoad()\", onLoad),\n};\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\n// export everything to window if global is set\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n","import kaboom from 'kaboom'\n\nkaboom()\n\nloadSprite(\"bean\", \"sprites/bean.png\")\nloadSprite(\"ground\", \"sprites/ground.png\")\n// add a character to screen\nadd([\n// list of components\nsprite(\"bean\"),\npos(80, 40),\narea(),\n]);\n\naddLevel([\n'          ',\n'          ',\n'xxxxxxxxxx',\n], {\nwidth: 31,\nheight: 100,\n\"x\": () => [\n    sprite(\"ground\"),\n    area(),\n    solid(),\n],\n})","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}